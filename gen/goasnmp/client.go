// Code generated by goa v3.2.6, DO NOT EDIT.
//
// goasnmp client
//
// Command:
// $ goa gen github.com/rshade/goasnmp/design

package goasnmp

import (
	"context"

	"github.com/go-kit/kit/endpoint"
)

// Client is the "goasnmp" service client.
type Client struct {
	ListEndpoint endpoint.Endpoint
	AddEndpoint  endpoint.Endpoint
}

// NewClient initializes a "goasnmp" service client given the endpoints.
func NewClient(list, add endpoint.Endpoint) *Client {
	return &Client{
		ListEndpoint: list,
		AddEndpoint:  add,
	}
}

// List calls the "list" endpoint of the "goasnmp" service.
func (c *Client) List(ctx context.Context) (res HostCollection, err error) {
	var ires interface{}
	ires, err = c.ListEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(HostCollection), nil
}

// Add calls the "add" endpoint of the "goasnmp" service.
func (c *Client) Add(ctx context.Context, p *AddPayload) (res *Host, err error) {
	var ires interface{}
	ires, err = c.AddEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Host), nil
}
